{"ast":null,"code":"var _jsxFileName = \"/home/real/Desktop/PROJECT/Project/FrontEnd/React-InventoryMngnt/src/pages/Download.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Download() {\n  _s();\n  const [imageURL, setImageURL] = useState('');\n  useEffect(() => {\n    // Fetch the image URL from the Spring Boot backend\n    fetch('/api/images/example.jpg') // Replace with the actual image name or endpoint\n    .then(response => {\n      if (response.ok) {\n        return response.blob();\n      } else {\n        throw new Error('Network response was not ok');\n      }\n    }).then(blob => {\n      const url = URL.createObjectURL(blob);\n      setImageURL(url);\n    }).catch(error => {\n      console.error('Error fetching image:', error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Image Display Example\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), imageURL && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imageURL,\n      alt: \"Fetched from Spring Boot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n_s(Download, \"6fsRnKFN53Sg4AhR/GB90qNzE9o=\");\n_c = Download;\nexport default Download;\nvar _c;\n$RefreshReg$(_c, \"Download\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Download","_s","imageURL","setImageURL","fetch","then","response","ok","blob","Error","url","URL","createObjectURL","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["/home/real/Desktop/PROJECT/Project/FrontEnd/React-InventoryMngnt/src/pages/Download.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction Download() {\n    const [imageURL, setImageURL] = useState('');\n\n    useEffect(() => {\n        // Fetch the image URL from the Spring Boot backend\n        fetch('/api/images/example.jpg') // Replace with the actual image name or endpoint\n            .then(response => {\n                if (response.ok) {\n                    return response.blob();\n                } else {\n                    throw new Error('Network response was not ok');\n                }\n            })\n            .then(blob => {\n                const url = URL.createObjectURL(blob);\n                setImageURL(url);\n            })\n            .catch(error => {\n                console.error('Error fetching image:', error);\n            });\n    }, []);\n\n    return (\n        <div>\n            <h1>Image Display Example</h1>\n            {imageURL && <img src={imageURL} alt=\"Fetched from Spring Boot\" />}\n        </div>\n    );\n}\n\nexport default Download;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACZ;IACAO,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAAA,CAC5BC,IAAI,CAACC,QAAQ,IAAI;MACd,IAAIA,QAAQ,CAACC,EAAE,EAAE;QACb,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC;MAC1B,CAAC,MAAM;QACH,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAClD;IACJ,CAAC,CAAC,CACDJ,IAAI,CAACG,IAAI,IAAI;MACV,MAAME,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACJ,IAAI,CAAC;MACrCL,WAAW,CAACO,GAAG,CAAC;IACpB,CAAC,CAAC,CACDG,KAAK,CAACC,KAAK,IAAI;MACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IACjD,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIf,OAAA;IAAAiB,QAAA,gBACIjB,OAAA;MAAAiB,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC7BlB,QAAQ,iBAAIH,OAAA;MAAKsB,GAAG,EAAEnB,QAAS;MAACoB,GAAG,EAAC;IAA0B;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjE,CAAC;AAEd;AAACnB,EAAA,CA5BQD,QAAQ;AAAAuB,EAAA,GAARvB,QAAQ;AA8BjB,eAAeA,QAAQ;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}