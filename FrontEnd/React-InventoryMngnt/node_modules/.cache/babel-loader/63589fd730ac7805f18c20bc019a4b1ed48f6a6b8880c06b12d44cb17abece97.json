{"ast":null,"code":"var _jsxFileName = \"/home/real/Desktop/PROJECT/Project/FrontEnd/React-InventoryMngnt/src/pages/Login.js\",\n  _s = $RefreshSig$();\n// import \"../css/Login.css\";\n// import { useState } from \"react\"\n// import { useNavigate } from \"react-router-dom\";\n// import axios from \"axios\"\n\n// function Login() {\n\n//     let [icreds, setICreds] = useState({email : \"\", password : \"\"});\n//     let [user, setUser] = useState({});\n\n//     const navigate = useNavigate();\n\n//     const signIn = () => {\n//         console.log(\"in signin\")\n//         axios.post(\"http://127.0.0.1:8080/user/login\", icreds)\n//              .then(res => {\n//                setUser(res.data);\n//                console.log(res.data)\n//                console.log(\"Logged in successfully\");\n//                sessionStorage.setItem(\"userId\", res.data.id);\n//                sessionStorage.setItem(\"firstName\", res.data.fname);\n//                navigate('/allProduct')\n//              }).catch(error => {\n//                 if (error.response && error.response.status === 404) {\n//                   console.log(\"Invalid credentials\")\n//                 } else {\n//                   setUser('An error occurred');\n//                 }\n//                 setUser(null);\n//               });  \n//     }\n\n//     const onInputChange = (event) => {\n//         let copyOfICreds = { ...icreds }\n//         copyOfICreds[event.target.name] = event.target.value;\n//         setICreds(copyOfICreds);\n//     }\n\n//   //\n//   return (\n//     <div className=\"center\">\n//       <form className=\"form\" action=\"\" method=\"POST\" role=\"form\">\n//         <p className=\"title\">Login</p>\n//         <label>\n//           <input required name=\"email\" value={icreds.email} onChange={onInputChange} type=\"email\" className=\"input\" />\n//           <span>Email</span>\n//         </label>\n//         <label>\n//           <input required name=\"password\" value={icreds.password} onChange={onInputChange} type=\"password\" className=\"input\" />\n//           <span>Password</span>\n//         </label>\n//         <button type=\"button\" onClick={signIn} className=\"btn btn-primary\">Submit</button>\n\n//         <br></br><br></br><hr/>\n\n//       </form>\n//       <button className=\"btn btn-primary seller\" onClick={()=>{navigate('/addUser')}}>Become a Employee</button>\n\n//     </div>\n//   );\n// }\n\n// export default Login;\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"../css/Login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [icreds, setICreds] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [user, setUser] = useState({});\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n  const signIn = () => {\n    // ... (your existing signIn logic)\n  };\n  const onInputChange = event => {\n    // ... (your existing onInputChange logic)\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"login-title\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-label\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          name: \"email\",\n          value: icreds.email,\n          onChange: onInputChange,\n          type: \"email\",\n          className: \"input-field\",\n          placeholder: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-label\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          name: \"password\",\n          value: icreds.password,\n          onChange: onInputChange,\n          type: \"password\",\n          className: \"input-field\",\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: signIn,\n        className: \"submit-button\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"employee-button\",\n      onClick: () => {\n        navigate(\"/addUser\");\n      },\n      children: \"Become an Employee\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"KKLvhin0yU02FDMtuhSK9zj1yG8=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","axios","jsxDEV","_jsxDEV","Login","_s","icreds","setICreds","email","password","user","setUser","error","setError","navigate","signIn","onInputChange","event","className","children","fileName","_jsxFileName","lineNumber","columnNumber","required","name","value","onChange","type","placeholder","onClick","_c","$RefreshReg$"],"sources":["/home/real/Desktop/PROJECT/Project/FrontEnd/React-InventoryMngnt/src/pages/Login.js"],"sourcesContent":["// import \"../css/Login.css\";\r\n// import { useState } from \"react\"\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import axios from \"axios\"\r\n\r\n// function Login() {\r\n\r\n//     let [icreds, setICreds] = useState({email : \"\", password : \"\"});\r\n//     let [user, setUser] = useState({});\r\n\r\n//     const navigate = useNavigate();\r\n\r\n//     const signIn = () => {\r\n//         console.log(\"in signin\")\r\n//         axios.post(\"http://127.0.0.1:8080/user/login\", icreds)\r\n//              .then(res => {\r\n//                setUser(res.data);\r\n//                console.log(res.data)\r\n//                console.log(\"Logged in successfully\");\r\n//                sessionStorage.setItem(\"userId\", res.data.id);\r\n//                sessionStorage.setItem(\"firstName\", res.data.fname);\r\n//                navigate('/allProduct')\r\n//              }).catch(error => {\r\n//                 if (error.response && error.response.status === 404) {\r\n//                   console.log(\"Invalid credentials\")\r\n//                 } else {\r\n//                   setUser('An error occurred');\r\n//                 }\r\n//                 setUser(null);\r\n//               });  \r\n//     }\r\n\r\n\r\n//     const onInputChange = (event) => {\r\n//         let copyOfICreds = { ...icreds }\r\n//         copyOfICreds[event.target.name] = event.target.value;\r\n//         setICreds(copyOfICreds);\r\n//     }\r\n\r\n\r\n//   //\r\n//   return (\r\n//     <div className=\"center\">\r\n//       <form className=\"form\" action=\"\" method=\"POST\" role=\"form\">\r\n//         <p className=\"title\">Login</p>\r\n//         <label>\r\n//           <input required name=\"email\" value={icreds.email} onChange={onInputChange} type=\"email\" className=\"input\" />\r\n//           <span>Email</span>\r\n//         </label>\r\n//         <label>\r\n//           <input required name=\"password\" value={icreds.password} onChange={onInputChange} type=\"password\" className=\"input\" />\r\n//           <span>Password</span>\r\n//         </label>\r\n//         <button type=\"button\" onClick={signIn} className=\"btn btn-primary\">Submit</button>\r\n        \r\n//         <br></br><br></br><hr/>\r\n        \r\n//       </form>\r\n//       <button className=\"btn btn-primary seller\" onClick={()=>{navigate('/addUser')}}>Become a Employee</button>\r\n\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Login;\r\n\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"../css/Login.css\";\r\n\r\nfunction Login() {\r\n  const [icreds, setICreds] = useState({ email: \"\", password: \"\" });\r\n  const [user, setUser] = useState({});\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const signIn = () => {\r\n    // ... (your existing signIn logic)\r\n  };\r\n\r\n  const onInputChange = (event) => {\r\n    // ... (your existing onInputChange logic)\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <form className=\"login-form\">\r\n        <h2 className=\"login-title\">Login</h2>\r\n        <label className=\"input-label\">\r\n          <input\r\n            required\r\n            name=\"email\"\r\n            value={icreds.email}\r\n            onChange={onInputChange}\r\n            type=\"email\"\r\n            className=\"input-field\"\r\n            placeholder=\"Email\"\r\n          />\r\n        </label>\r\n        <label className=\"input-label\">\r\n          <input\r\n            required\r\n            name=\"password\"\r\n            value={icreds.password}\r\n            onChange={onInputChange}\r\n            type=\"password\"\r\n            className=\"input-field\"\r\n            placeholder=\"Password\"\r\n          />\r\n        </label>\r\n        {error && <p className=\"error-message\">{error}</p>}\r\n        <button type=\"button\" onClick={signIn} className=\"submit-button\">\r\n          Sign In\r\n        </button>\r\n      </form>\r\n      <button\r\n        className=\"employee-button\"\r\n        onClick={() => {\r\n          navigate(\"/addUser\");\r\n        }}\r\n      >\r\n        Become an Employee\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}